version: '3'
services:

  eureka-service:
    build: ./path/to/eureka-service/Dockerfile
    ports:
      - "8761:8761"
    networks:
      - my_network

  api-gateway:
    build: ./path/to/api-gateway/Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - eureka-service
    networks:
      - my_network

  weather-service:
    build: ./path/to/weather-service/Dockerfile
    ports:
      - "8083:8083"
    depends_on:
      - eureka-service
      - database
      - rabbitmq
    environment:
      DATABASE_URL: "jdbc:mysql://database:3306/product"
    networks:
      - my_network

  notification-service:
    build: ./path/to/notification-service/Dockerfile
    ports:
      - "8082:8082"
    depends_on:
      - eureka-service
      - database
      - rabbitmq
    environment:
      DATABASE_URL: "jdbc:mysql://database:3306/product"
    networks:
      - my_network

  user-service:
    build: ./path/to/user-service/Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      - eureka-service
      - database
      - rabbitmq
    environment:
      DATABASE_URL: "jdbc:postgresql://database:5432/product"
    networks:
      - my_network

  database:
    image: postgres:latest
    environment:
      POSTGRES_PASSWORD: root
      POSTGRES_DB: product
    ports:
      - "5432:5432"
    networks:
      - my_network

  rabbitmq:
    image: "rabbitmq:management"
    ports:
      - "5672:5672"  # RabbitMQ Port
      - "15672:15672"  # RabbitMQ Management UI Port
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - my_network

networks:
  my_network:
    driver: bridge
